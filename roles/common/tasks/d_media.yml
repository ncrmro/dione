- name: Create media network
  docker_network:
    name: media

- name: Create sonarr_config volume
  docker_volume:
    name: sonarr_config
    driver: local
    driver_options:
      type: nfs
      device: :/mnt/ocean/block_storage/sonarr-config
      o: addr=192.168.1.81,rw,vers=4,async

- name: Create radarr_config volume with options
  docker_volume:
    name: radarr_config
    driver: local
    driver_options:
      type: nfs
      device: :/mnt/ocean/block_storage/radarr-config
      o: addr=192.168.1.81,rw,vers=4,async

- name: Create media_tv volume
  docker_volume:
    name: media_tv
    driver: local
    driver_options:
      type: nfs
      device: :/mnt/ocean/media/tv
      o: addr=192.168.1.81,rw,vers=4,async

- name: Create media_movies volume
  docker_volume:
    name: media_movies
    driver: local
    driver_options:
      type: nfs
      device: :/mnt/ocean/media/movies
      o: addr=192.168.1.81,rw,vers=4,async

# https://old.reddit.com/r/usenet/wiki/docker
- name: Sonarr
  docker_container:
    name: sonarr
    state: started
    image: linuxserver/sonarr
    restart_policy: always
    memory: "256M"
    cpu_shares: "512"
    env:
      PUID: "0"
      PGID: "0"
      TZ: "America/Chicago"
      UMASK_SET: "022"
    labels:
      traefik.enable: "true"
      traefik.http.routers.sonarr.rule: Host(`sonarr.wg`)
      traefik.http.routers.sonarr.entrypoints: web
    volumes:
      - sonarr_config:/config
      - media_tv:/data/media/tv
      - nzbget_downloads:/data/downloads/usenet
    networks:
      - name: proxy
      - name: media
    hostname: sonarr
    healthcheck:
      # Check if nginx server is healthy by curl'ing the server.
      # If this fails or timeouts, the healthcheck fails.
      # Comment out on first run to get API key
      test: ["CMD", "curl", "-X", "GET", "--fail",  "http://localhost:8989/api/system/status?apikey=d5880ddd1a114a46b6fa49ac317b59a7"]
      interval: 1m30s
      timeout: 10s
      retries: 10
      start_period: 5s

- name: Radarr
  docker_container:
    name: radarr
    state: started
    image: linuxserver/radarr
    restart_policy: always
    memory: "256M"
    cpu_shares: 512
    env:
      PUID: "0"
      PGID: "0"
      TZ: "America/Chicago"
      UMASK_SET: "022"
    labels:
      traefik.enable: "true"
      traefik.http.routers.radarr.rule: Host(`radarr.wg`)
      traefik.http.routers.radarr.entrypoints: web
    volumes:
      - radarr_config:/config
      - media_movies:/data/media/movies
      - nzbget_downloads:/data/downloads/usnet
    networks:
      - name: proxy
      - name: media
    hostname: radarr
    healthcheck:
      # Check if nginx server is healthy by curl'ing the server.
      # If this fails or timeouts, the healthcheck fails.
      # Comment out on first run to get API key
      test: ["CMD", "curl", "-X", "GET", "--fail",  "http://localhost:7878/api/system/status?apikey=38dd32cf03324c3cb82cb85acb902b75"]
      interval: 1m30s
      timeout: 10s
      retries: 10
      start_period: 5s

- name: Create plex_config volume with options
  docker_volume:
    name: plex_config
    driver: local
    driver_options:
      type: nfs
      device: :/mnt/ocean/block_storage/plex-config
      o: addr=192.168.1.81,rw,vers=4,async

- name: Plex
  docker_container:
    name: plex
    state: started
    image: linuxserver/plex
    restart_policy: always
    memory: "512M"
    cpu_shares: 512
    env:
      PUID: "0"
      PGID: "0"
      VERSION: docker
      PLEX_CLAIM: "claim-Fu7gujiwbh-T6xU8iVSU"
    labels:
      traefik.enable: "true"
      traefik.http.routers.plex.rule: Host(`plex.wg`)
      traefik.http.routers.plex.entrypoints: web
      traefik.http.services.plex.loadbalancer.server.port: "32400"
    volumes:
      - plex_config:/config:rw
      - media_tv:/tv:ro
      - media_movies:/movies:ro
    networks:
      - name: proxy
      - name: media
